{"version":3,"sources":["index.js"],"names":["require","toLowercase","splitBy","compose","toString","firstElement","secondElement","URLModule","getKey","getValue","getQuery","extractQueryParams","query","length","params","queries","forEach","item","_key","_value","decodeURIComponent","module","exports"],"mappings":";;eAAiCA,OAAO,CAAC,WAAD,C;IAAhCC,W,YAAAA,W;IAAaC,O,YAAAA,O;;gBACDF,OAAO,CAAC,OAAD,C;IAAnBG,O,aAAAA,O;;gBACaH,OAAO,CAAC,cAAD,C;IAApBI,Q,aAAAA,Q;;gBACgCJ,OAAO,CAAC,UAAD,C;IAAvCK,Y,aAAAA,Y;IAAcC,a,aAAAA,a;;AAEtB,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,MAAM,GAAGL,OAAO,CAACD,OAAO,CAAC,GAAD,CAAR,EAAeG,YAAf,EAA6BD,QAA7B,EAAuCH,WAAvC,CAAtB;AACA,MAAMQ,QAAQ,GAAGN,OAAO,CAACD,OAAO,CAAC,GAAD,CAAR,EAAeI,aAAf,CAAxB;AACA,MAAMI,QAAQ,GAAGP,OAAO,CAACD,OAAO,CAAC,GAAD,CAAR,EAAeI,aAAf,EAA8BJ,OAAO,CAAC,GAAD,CAArC,CAAxB;;AAEA,MAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AACD,QAAIV,OAAO,CAAC,GAAD,CAAP,CAAaU,KAAb,EAAoBC,MAApB,GAA6B,CAAjC,EAAoC,OAAO,EAAP;AAEpC,QAAIC,MAAM,GAAG,EAAb;AAAA,QAAiBC,OAAjB;AACAA,IAAAA,OAAO,GAAGL,QAAQ,CAACE,KAAD,CAAlB;AACAG,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAACC,IAAD,EAAU;AACxB,UAAMC,IAAI,GAAGV,MAAM,CAACS,IAAD,CAAnB;;AACA,UAAME,MAAM,GAAGV,QAAQ,CAACQ,IAAD,CAAvB;;AACAH,MAAAA,MAAM,CAACI,IAAD,CAAN,GAAeE,kBAAkB,CAACD,MAAD,CAAjC;AACD,KAJD;AAKA,WAAOL,MAAP;AACD,GAdD;;AAgBA,SAAO;AACLH,IAAAA,kBAAkB,EAAlBA;AADK,GAAP;AAGD,CAxBD;;AA0BAU,MAAM,CAACC,OAAP,GAAiBf,SAAS,EAA1B","sourcesContent":["const { toLowercase, splitBy } = require(\"../String\");\nconst { compose } = require(\"../Fn\");\nconst { toString } = require(\"../Transform\");\nconst { firstElement, secondElement } = require(\"../Array\");\n\nconst URLModule = () => {\n  const getKey = compose(splitBy(\"=\"), firstElement, toString, toLowercase);\n  const getValue = compose(splitBy(\"=\"), secondElement);\n  const getQuery = compose(splitBy(\"?\"), secondElement, splitBy(\"&\"));\n\n  const extractQueryParams = (query) => {\n    if (!query) {\n      return {};\n    }\n    if (splitBy(\"?\")(query).length < 2) return {};\n\n    let params = {}, queries;\n    queries = getQuery(query);\n    queries.forEach((item) => {\n      const _key = getKey(item);\n      const _value = getValue(item);\n      params[_key] = decodeURIComponent(_value);\n    });\n    return params;\n  };\n\n  return {\n    extractQueryParams,\n  };\n};\n\nmodule.exports = URLModule();\n"],"file":"index.js"}